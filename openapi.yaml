# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Conduit API
    description: The greeting service definition.
    version: 0.0.1
paths:
    /api/profiles/{targetId}/follow:
        post:
            tags:
                - Conduit
            operationId: Conduit_FollowUser
            parameters:
                - name: targetId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FollowUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FollowFanReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/profiles/{targetId}/unfollow:
        delete:
            tags:
                - Conduit
            operationId: Conduit_UnfollowUser
            parameters:
                - name: targetId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FollowFanReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/profiles/{userId}:
        get:
            tags:
                - Conduit
            operationId: Conduit_GetProfile
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetProfileReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/users:
        post:
            tags:
                - Conduit
            operationId: Conduit_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/users/login:
        post:
            tags:
                - Conduit
            operationId: Conduit_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/users/updatePassword:
        post:
            tags:
                - Conduit
            operationId: Conduit_UpdatePassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        FollowFanReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                res:
                    $ref: '#/components/schemas/Res'
                data:
                    $ref: '#/components/schemas/RelationData'
        FollowUserRequest:
            type: object
            properties:
                targetId:
                    type: string
            description: NID_FOLLOW_USER_REQ
        GetProfileReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                res:
                    $ref: '#/components/schemas/Res'
                data:
                    $ref: '#/components/schemas/ProfileData'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        LoginReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                res:
                    $ref: '#/components/schemas/Res'
                token:
                    type: string
        LoginRequest:
            type: object
            properties:
                phone:
                    type: string
                password:
                    type: string
            description: NID_LOGIN_REQ
        ProfileData:
            type: object
            properties:
                userId:
                    type: integer
                    format: uint32
                tags:
                    type: string
                followCount:
                    type: integer
                    format: uint32
                fanCount:
                    type: integer
                    format: uint32
                viewCount:
                    type: integer
                    format: uint32
                noteCount:
                    type: integer
                    format: uint32
                receivedLikeCount:
                    type: integer
                    format: uint32
                collectedCount:
                    type: integer
                    format: uint32
                commentCount:
                    type: integer
                    format: uint32
                lastActive:
                    type: string
                    description: string last_login_ip = 11;
                    format: date-time
            description: "SO  CAL 相关协议\r\n NID_GET_PROFILE_REQ"
        RegisterReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                res:
                    $ref: '#/components/schemas/Res'
                token:
                    type: string
        RegisterRequest:
            type: object
            properties:
                username:
                    type: string
                phone:
                    type: string
                password:
                    type: string
            description: NID_REGIDTER_REQ
        RelationData:
            type: object
            properties:
                selfId:
                    type: integer
                    description: 当前用户信息
                    format: uint32
                followCount:
                    type: integer
                    format: uint32
                targetId:
                    type: integer
                    description: 对方用户信息
                    format: uint32
                fanCount:
                    type: integer
                    format: uint32
            description: NID_FOLLOW_FAN_REQ
        Res:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                reason:
                    type: string
                msg:
                    type: string
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateReply:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                res:
                    $ref: '#/components/schemas/Res'
        UpdateRequest:
            type: object
            properties:
                phone:
                    type: string
                oldPassword:
                    type: string
                newPassword:
                    type: string
            description: NID_UPDATE_REQ
tags:
    - name: Conduit
