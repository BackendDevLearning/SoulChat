syntax = "proto3";

package realworld.v1;

import "google/api/annotations.proto";
//import "google/protobuf/timestamp.proto";

option go_package = "kratos-realworld/api/conduit/v1;v1";

// The greeting service definition.
service Conduit {
  rpc Register(RegisterRequest) returns (RegisterReply) {
    option (google.api.http) = {
      post : "/api/users",
      body : "*",
    };
  }

  rpc Login(LoginRequest) returns (LoginReply) {
    option (google.api.http) = {
      post : "/api/users/login",
      body : "*",
    };
  }
}


message RegisterRequest {
  string username = 1;
  string phone = 2;
  string password = 3;
}

message RegisterReply {
  int32 code = 1;
  Res res = 2;
  string token = 3;
}

message LoginRequest {
  string phone = 1;
  string password = 2;
}

message LoginReply {
  int32 code = 1;  // 0=成功, 1=失败
  Res res = 2;  // 业务信息
  string token = 3;
}

message Res {
  int32 code = 1;  // 业务状态码，例如 200、422
  string reason = 2;  // 原因
  string msg = 3;  // 详细描述信息
}




