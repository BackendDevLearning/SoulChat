syntax = "proto3";

package realworld.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "kratos-realworld/api/conduit/v1;v1";

// The greeting service definition.
service Conduit {
  rpc Register(RegisterRequest) returns (RegisterReply) {
    option (google.api.http) = {
      post : "/api/users",
      body : "*",
    };
  }

  rpc Login(LoginRequest) returns (LoginReply) {
    option (google.api.http) = {
      post : "/api/users/login",
      body : "*",
    };
  }

  rpc UpdatePassword(UpdateRequest) returns (UpdateReply) {
    option (google.api.http) = {
      post:"/api/users/updatePassword",
      body: "*",
    };
  }

  rpc GetProfile(GetProfileRequest) returns (GetProfileReply) {
    option (google.api.http) = {
      get : "/api/profiles/{user_id}",
    };
  }

  rpc FollowUser(FollowUserRequest) returns (FollowFanReply) {
    option (google.api.http) = {
      post : "/api/profiles/{target_id}/follow",
      body : "*",
    };
  }

  rpc UnfollowUser(UnfollowUserRequest) returns (FollowFanReply) {
    option (google.api.http) = {
      delete : "/api/profiles/{target_id}/unfollow",
    };
  }



}


message RegisterRequest {
  string username = 1;
  string phone = 2;
  string password = 3;
}

message RegisterReply {
  int32 code = 1;
  Res res = 2;
  string token = 3;
}

message LoginRequest {
  string phone = 1;
  string password = 2;
}

message LoginReply {
  int32 code = 1;  // 0=成功, 1=失败
  Res res = 2;  // 业务信息
  string token = 3;
}

message UpdateRequest {
  string phone = 1;
  string old_password = 2;
  string new_password = 3;
}

message UpdateReply {
  int32 code = 1;  // 0=成功, 1=失败
  Res res = 2;  // 业务信息
}

message GetProfileRequest { string user_id = 1; }

message GetProfileReply {
  int32 code = 1;
  Res res = 2;
  message ProfileData {
    uint32 user_id = 2;
    string tags = 3;

    uint32 follow_count = 4;
    uint32 fan_count = 5;

    uint32 view_count = 6;
    uint32 note_count = 7;
    uint32 received_like_count = 8;
    uint32 collected_count = 9;
    uint32 comment_count = 10;

    string last_login_ip = 11;
    google.protobuf.Timestamp last_active = 12;
    string status = 13;
  }
  ProfileData data = 3;
}

message FollowUserRequest { string target_id = 1; }

message UnfollowUserRequest { string target_id = 1; }

message FollowFanReply {
  int32 code = 1;
  Res res = 2;
  message RelationData {
    // 当前用户信息
    uint32 self_id = 1;
    uint32 follow_count = 2; // 我的关注数

    // 对方用户信息
    uint32 target_id = 3;
    uint32 fan_count = 4;    // 对方的粉丝数
  }
  RelationData data = 3;
}

message Res {
  int32 code = 1;  // 业务状态码，例如 200、422
  string reason = 2;  // 原因
  string msg = 3;  // 详细描述信息
}




